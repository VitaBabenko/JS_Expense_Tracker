{"version":3,"sources":["index.js"],"names":["totalBalance","document","querySelector","incomeBalance","expenseBalance","list","noList","form","formatter","Intl","NumberFormat","signDisplay","transactions","JSON","parse","localStorage","getItem","total","type","console","log","createListTransaction","incomeTotal","expenseTotal","updateTotal","addEventListener","addTransaction","income","filter","oneTransaction","reduce","amount","textContent","toFixed","expense","length","markup","map","_ref","id","name","concat","format","join","innerHTML","evt","preventDefault","nameInput","elements","value","amountInput","number","push","trim","reset","saveLocaleStorage","deleteTransaction","alert","index","findIndex","splice","setItem","stringify"],"mappings":"AAAA,IAAMA,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;AAC7D,IAAMC,aAAa,GAAGF,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;AAC/D,IAAME,cAAc,GAAGH,QAAQ,CAACC,aAAa,CAAC,kBAAkB,CAAC;AACjE,IAAMG,IAAI,GAAGJ,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AACpD,IAAMI,MAAM,GAAGL,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AACjD,IAAMK,IAAI,GAAGN,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;AAE5C,IAAMM,SAAS,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC/CC,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,IAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE;AAC3E,IAAIC,KAAK,GAAG,CAAC;AACb,IAAIC,IAAI,GAAG,EAAE;AAEbC,OAAO,CAACC,GAAG,CAACR,YAAY,CAAC;AACzBS,qBAAqB,CAAC,CAAC;AACvBC,WAAW,CAAC,CAAC;AACbC,YAAY,CAAC,CAAC;AACdC,WAAW,CAAC,CAAC;AAEbjB,IAAI,CAACkB,gBAAgB,CAAC,QAAQ,EAAEC,cAAc,CAAC;AAE/C,SAASJ,WAAWA,CAAA,EAAG;EACrB,IAAMK,MAAM,GAAGf,YAAY,CACxBgB,MAAM,CAAC,UAACC,cAAc;IAAA,OAAKA,cAAc,CAACX,IAAI,KAAK,SAAS;EAAA,EAAC,CAC7DY,MAAM,CAAC,UAACb,KAAK,EAAEY,cAAc;IAAA,OAAK,CAACZ,KAAK,GAAG,CAACY,cAAc,CAACE,MAAM;EAAA,GAAE,CAAC,CAAC;EAExE5B,aAAa,CAAC6B,WAAW,GAAGL,MAAM,CAACM,OAAO,CAAC,CAAC,CAAC;EAE7C,OAAON,MAAM;AACf;AAEA,SAASJ,YAAYA,CAAA,EAAG;EACtB,IAAMW,OAAO,GAAGtB,YAAY,CACzBgB,MAAM,CAAC,UAACC,cAAc;IAAA,OAAKA,cAAc,CAACX,IAAI,KAAK,SAAS;EAAA,EAAC,CAC7DY,MAAM,CAAC,UAACb,KAAK,EAAEY,cAAc;IAAA,OAAK,CAACZ,KAAK,GAAG,CAACY,cAAc,CAACE,MAAM;EAAA,GAAE,CAAC,CAAC;EAExE3B,cAAc,CAAC4B,WAAW,GAAGE,OAAO,CAACD,OAAO,CAAC,CAAC,CAAC;EAC/C,OAAOC,OAAO;AAChB;AAEA,SAASV,WAAWA,CAAA,EAAG;EACrBP,KAAK,GAAGK,WAAW,CAAC,CAAC,GAAGC,YAAY,CAAC,CAAC;EACtCvB,YAAY,CAACgC,WAAW,GAAGf,KAAK,CAACgB,OAAO,CAAC,CAAC,CAAC;AAC7C;AAEA,SAASZ,qBAAqBA,CAAA,EAAG;EAC/B,IAAIT,YAAY,CAACuB,MAAM,KAAK,CAAC,EAAE;IAC7B7B,MAAM,CAAC0B,WAAW,GAAG,iCAAiC;EACxD;EACA,IAAMI,MAAM,GAAGxB,YAAY,CACxByB,GAAG,CAAC,UAAAC,IAAA,EAA0B;IAAA,IAAvBC,EAAE,GAAAD,IAAA,CAAFC,EAAE;MAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;MAAET,MAAM,GAAAO,IAAA,CAANP,MAAM;IACtB,6GAAAU,MAAA,CAAsGF,EAAE,gDAAAE,MAAA,CAA0CD,IAAI,iCAAAC,MAAA,CAA4BjC,SAAS,CAACkC,MAAM,CAChMX,MACF,CAAC;EACH,CAAC,CAAC,CACDY,IAAI,CAAC,EAAE,CAAC;EAEXtC,IAAI,CAACuC,SAAS,GAAGR,MAAM;AACzB;AAEA,SAASV,cAAcA,CAACmB,GAAG,EAAE;EAC3BA,GAAG,CAACC,cAAc,CAAC,CAAC;EAEpB,IAAMC,SAAS,GAAGxC,IAAI,CAACyC,QAAQ,CAACR,IAAI,CAACS,KAAK;EAC1C,IAAMC,WAAW,GAAG,CAAC3C,IAAI,CAACyC,QAAQ,CAACG,MAAM,CAACF,KAAK;EAE/C,IAAIC,WAAW,GAAG,CAAC,EAAE;IACnBhC,IAAI,GAAG,SAAS;EAClB,CAAC,MAAM;IACLA,IAAI,GAAG,SAAS;EAClB;EAEAN,YAAY,CAACwC,IAAI,CAAC;IAChBb,EAAE,EAAE3B,YAAY,CAACuB,MAAM,GAAG,CAAC;IAC3BK,IAAI,EAAEO,SAAS,CAACM,IAAI,CAAC,CAAC;IACtBtB,MAAM,EAAEmB,WAAW,CAACjB,OAAO,CAAC,CAAC,CAAC;IAC9Bf,IAAI,EAAJA;EACF,CAAC,CAAC;EAEFX,IAAI,CAAC+C,KAAK,CAAC,CAAC;EAEZC,iBAAiB,CAAC,CAAC;EACnB/B,WAAW,CAAC,CAAC;EACbH,qBAAqB,CAAC,CAAC;AACzB;AAEA,SAASmC,iBAAiBA,CAACjB,EAAE,EAAE;EAC7BkB,KAAK,CAAC,QAAQ,CAAC;EACf,IAAMC,KAAK,GAAG9C,YAAY,CAAC+C,SAAS,CAClC,UAAC9B,cAAc;IAAA,OAAKA,cAAc,CAACU,EAAE,KAAKA,EAAE;EAAA,CAC9C,CAAC;EACD3B,YAAY,CAACgD,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;EAE7BlC,WAAW,CAAC,CAAC;EACb+B,iBAAiB,CAAC,CAAC;EACnBlC,qBAAqB,CAAC,CAAC;AACzB;AAEA,SAASkC,iBAAiBA,CAAA,EAAG;EAC3BxC,YAAY,CAAC8C,OAAO,CAAC,cAAc,EAAEhD,IAAI,CAACiD,SAAS,CAAClD,YAAY,CAAC,CAAC;AACpE","file":"JS_Expense_Tracker.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const totalBalance = document.querySelector(\".total_balance\");\r\nconst incomeBalance = document.querySelector(\".income_balance\");\r\nconst expenseBalance = document.querySelector(\".expense_balance\");\r\nconst list = document.querySelector(\".list_history\");\r\nconst noList = document.querySelector(\".no_list\");\r\nconst form = document.querySelector(\".form\");\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  signDisplay: \"always\",\r\n});\r\n\r\nconst transactions = JSON.parse(localStorage.getItem(\"transactions\")) || [];\r\nlet total = 0;\r\nlet type = \"\";\r\n\r\nconsole.log(transactions);\r\ncreateListTransaction();\r\nincomeTotal();\r\nexpenseTotal();\r\nupdateTotal();\r\n\r\nform.addEventListener(\"submit\", addTransaction);\r\n\r\nfunction incomeTotal() {\r\n  const income = transactions\r\n    .filter((oneTransaction) => oneTransaction.type === \"+income\")\r\n    .reduce((total, oneTransaction) => +total + +oneTransaction.amount, 0);\r\n\r\n  incomeBalance.textContent = income.toFixed(2);\r\n\r\n  return income;\r\n}\r\n\r\nfunction expenseTotal() {\r\n  const expense = transactions\r\n    .filter((oneTransaction) => oneTransaction.type === \"expense\")\r\n    .reduce((total, oneTransaction) => +total + +oneTransaction.amount, 0);\r\n\r\n  expenseBalance.textContent = expense.toFixed(2);\r\n  return expense;\r\n}\r\n\r\nfunction updateTotal() {\r\n  total = incomeTotal() + expenseTotal();\r\n  totalBalance.textContent = total.toFixed(2);\r\n}\r\n\r\nfunction createListTransaction() {\r\n  if (transactions.length === 0) {\r\n    noList.textContent = \"You don`t have any transaction!\";\r\n  }\r\n  const markup = transactions\r\n    .map(({ id, name, amount }) => {\r\n      return `<li class=\"list_item\"><button id=\"btn_delete\" class=\"btn_delete\" onclick=\"deleteTransaction(${id})\">delete</button><p class=\"item_text\">${name}</p><p class=\"item_text\">${formatter.format(\r\n        amount\r\n      )}</p></li>`;\r\n    })\r\n    .join(\"\");\r\n\r\n  list.innerHTML = markup;\r\n}\r\n\r\nfunction addTransaction(evt) {\r\n  evt.preventDefault();\r\n\r\n  const nameInput = form.elements.name.value;\r\n  const amountInput = +form.elements.number.value;\r\n\r\n  if (amountInput > 0) {\r\n    type = \"+income\";\r\n  } else {\r\n    type = \"expense\";\r\n  }\r\n\r\n  transactions.push({\r\n    id: transactions.length + 1,\r\n    name: nameInput.trim(),\r\n    amount: amountInput.toFixed(2),\r\n    type,\r\n  });\r\n\r\n  form.reset();\r\n\r\n  saveLocaleStorage();\r\n  updateTotal();\r\n  createListTransaction();\r\n}\r\n\r\nfunction deleteTransaction(id) {\r\n  alert(\"delete\");\r\n  const index = transactions.findIndex(\r\n    (oneTransaction) => oneTransaction.id === id\r\n  );\r\n  transactions.splice(index, 1);\r\n\r\n  updateTotal();\r\n  saveLocaleStorage();\r\n  createListTransaction();\r\n}\r\n\r\nfunction saveLocaleStorage() {\r\n  localStorage.setItem(\"transactions\", JSON.stringify(transactions));\r\n}\r\n"]}